// <auto-generated />
using System;
using HR.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HR.Persistence.Migrations
{
    [DbContext(typeof(HRContext))]
    [Migration("20231126194431_SeedDataModified")]
    partial class SeedDataModified
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HR.Domain.Concrete.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("61d46816-f5f9-4d85-9170-c7405724e003"),
                            CreatedDate = new DateTime(2023, 11, 26, 22, 44, 31, 492, DateTimeKind.Local).AddTicks(7966),
                            IsActive = true,
                            Name = "Mechanical Design"
                        },
                        new
                        {
                            Id = new Guid("61260eba-550d-4e3d-87cd-0b56976b3c1e"),
                            CreatedDate = new DateTime(2023, 11, 26, 22, 44, 31, 492, DateTimeKind.Local).AddTicks(7987),
                            IsActive = true,
                            Name = "HR"
                        },
                        new
                        {
                            Id = new Guid("80ed70bb-473a-49be-89b8-2798f05e682b"),
                            CreatedDate = new DateTime(2023, 11, 26, 22, 44, 31, 492, DateTimeKind.Local).AddTicks(8008),
                            IsActive = true,
                            Name = "Accounting"
                        },
                        new
                        {
                            Id = new Guid("3027bdaf-9bfe-4142-b6eb-5251a39105ba"),
                            CreatedDate = new DateTime(2023, 11, 26, 22, 44, 31, 492, DateTimeKind.Local).AddTicks(8011),
                            IsActive = true,
                            Name = "Information Technology"
                        });
                });

            modelBuilder.Entity("HR.Domain.Concrete.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a4f3ebd5-529c-4f6f-9f56-c356ae70b745"),
                            CreatedDate = new DateTime(2023, 11, 26, 22, 44, 31, 492, DateTimeKind.Local).AddTicks(8302),
                            IsActive = true,
                            Name = "Software Developer"
                        },
                        new
                        {
                            Id = new Guid("2e01cff9-9e58-4384-a595-a2b49ede1bd3"),
                            CreatedDate = new DateTime(2023, 11, 26, 22, 44, 31, 492, DateTimeKind.Local).AddTicks(8308),
                            IsActive = true,
                            Name = "FrontEnd Developer"
                        },
                        new
                        {
                            Id = new Guid("ba0ec97b-2a23-43cd-8641-d97516e40a0e"),
                            CreatedDate = new DateTime(2023, 11, 26, 22, 44, 31, 492, DateTimeKind.Local).AddTicks(8314),
                            IsActive = true,
                            Name = "BackEnd Developer"
                        },
                        new
                        {
                            Id = new Guid("ce51c1ae-98c6-430d-b313-8302eb556d02"),
                            CreatedDate = new DateTime(2023, 11, 26, 22, 44, 31, 492, DateTimeKind.Local).AddTicks(8327),
                            IsActive = true,
                            Name = "Civil Engineer"
                        },
                        new
                        {
                            Id = new Guid("a8f2e627-46a4-4613-b46c-35fecb888157"),
                            CreatedDate = new DateTime(2023, 11, 26, 22, 44, 31, 492, DateTimeKind.Local).AddTicks(8332),
                            IsActive = true,
                            Name = "Industrial Engineer"
                        });
                });

            modelBuilder.Entity("HR.Domain.Concrete.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("BirthDate")
                        .HasMaxLength(15)
                        .HasColumnType("date");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("FireDate")
                        .HasMaxLength(15)
                        .HasColumnType("date");

                    b.Property<DateTime>("HireDate")
                        .HasMaxLength(15)
                        .HasColumnType("date");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("JobId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar");

                    b.Property<string>("PlaceofBirth")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("SecondName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("SecondSurname")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("JobId");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b6f37500-cfd3-4968-9d76-71091665e28a"),
                            Address = "Kadıköy/İstanbul",
                            BirthDate = new DateTime(1990, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CompanyName = "Google",
                            CreatedDate = new DateTime(2023, 11, 26, 22, 44, 31, 492, DateTimeKind.Local).AddTicks(8370),
                            DepartmentId = new Guid("3027bdaf-9bfe-4142-b6eb-5251a39105ba"),
                            HireDate = new DateTime(2023, 11, 26, 22, 44, 31, 492, DateTimeKind.Local).AddTicks(8376),
                            IdentityNumber = "65803196176",
                            IsActive = true,
                            JobId = new Guid("a4f3ebd5-529c-4f6f-9f56-c356ae70b745"),
                            Mail = "Elif.Demir@bilgeadam.com",
                            Name = "Elif",
                            PhoneNumber = "5226932145",
                            Photo = "image_avatar-female.png",
                            PlaceofBirth = "İstanbul",
                            Salary = 34000,
                            SecondName = "Betül",
                            Surname = "Demir"
                        });
                });

            modelBuilder.Entity("HR.Domain.Concrete.Person", b =>
                {
                    b.HasOne("HR.Domain.Concrete.Department", "Department")
                        .WithMany("People")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HR.Domain.Concrete.Job", "Job")
                        .WithMany("People")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("HR.Domain.Concrete.Department", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("HR.Domain.Concrete.Job", b =>
                {
                    b.Navigation("People");
                });
#pragma warning restore 612, 618
        }
    }
}
