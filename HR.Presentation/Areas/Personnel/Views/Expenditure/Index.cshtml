@using HR.Application.Features.AdvancePayments.ViewModels;
@using HR.Application.Features.Expenditures.ViewModels
@using HR.Application.Features.EnumViewModels;
@model IEnumerable<ExpenditureListVM>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="col-lg-12 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <h4 class="card-title" style="color : #5D54A4;">Harcama Talep Durumu</h4>
            <div class="table-responsive">
                <table class="table table-hover" id="myTable">
                    <thead>
                        <tr>
                            <th hidden>
                                @Html.DisplayNameFor(model => model.Id)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ExpenditureType.Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Amount)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.CurrencyType)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ApprovalStatus)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ApprovedDate)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Document)
                            </th>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td hidden>
                                    @Html.DisplayFor(modelItem => item.Id)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ExpenditureType.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Amount)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CurrencyType)
                                </td>
                                <td class="@GetApprovalStatusClass(item.ApprovalStatus)">
                                    @Html.DisplayFor(modelItem => item.ApprovalStatus)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ApprovedDate)
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(item.Document))
                                    {
                                        <a href="@Url.Action("ViewDocument", "Expenditure", new { documentPath = item.Document })" class="btn btn-icon" target="_blank" style="display: flex; align-items: center; padding: 5px;">
                                            <i class="ti-eye" style="margin-right: 5px; font-size: 1.2em;"></i>
                                            <span style="font-size: 1em;">Görüntüle</span>
                                        </a>
                                    }
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(item.Document))
                                    {
                                        <a href="@Url.Action("DownloadDocument", "Expenditure", new { documentPath = item.Document })" class="btn btn-icon" style="display: flex; align-items: center; padding: 5px;">
                                            <i class="ti-download" style="margin-right: 5px; font-size: 1.2em;"></i>
                                            <span style="font-size: 1em;">İndir</span>
                                        </a>
                                    }
                                </td>
                                <td>
                                    @if (item.ApprovalStatus == ApprovalStatusVM.ApprovalWaiting)
                                    {
                                        <button href="#" onclick="deleteExpenditure('@item.Id')" class="btn btn-inverse-danger btn-icon"><i class="ti-trash"></i></button>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script type="text/javascript">
        function deleteExpenditure(expenditureId) {
            var confirmDelete = confirm("Bu harcama talebini silmek istediğinizden emin misiniz?");

            if (confirmDelete) {
                window.location.href = '/Personnel/Expenditure/DeleteByIdExpenditure?expenditureId=' + expenditureId;
            }
        }

        $(document).ready(function () {
            $('#myTable').DataTable({
                "language": {
                    "url": '//cdn.datatables.net/plug-ins/1.13.7/i18n/tr.json',
                },
                "order": [[4, 'asc']],
                "rowGroup": {
                    "dataSrc": 4
                }
            });
        });

        @functions {
        string GetApprovalStatusClass(ApprovalStatusVM status)
        {
            switch (status)
            {
                case ApprovalStatusVM.ApprovalWaiting:
                    return "onay-bekliyor";
                case ApprovalStatusVM.Approved:
                    return "onaylandi";
                case ApprovalStatusVM.Rejected:
                    return "reddedildi";
                default:
                    return "";
            }
        }
    }
    </script>
}
