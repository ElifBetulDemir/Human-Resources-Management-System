@using System.Globalization
@using HR.Application.Features.AdvancePayments.ViewModels;
@using HR.Application.Features.Expenditures.ViewModels;
@model ExpenditureCreateVM
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "CreateExpenditure";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>

    .btn-primary {
        background-color: #5D54A4;
        border-color: mediumpurple;
        color: black;
    }

        .btn-primary:hover {
            background-color: mediumpurple;
            border-color: mediumpurple;
        }

    .btn-outline-primary {
        border-color: mediumpurple;
        color: #5D54A4;
    }

        .btn-outline-primary:hover {
            background-color: #5D54A4;
            border-color: mediumpurple;
            color: black;
        }

</style>
<div class="col-lg-6 offset-lg-3 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <h4 class="card-title" style="color : #5D54A4;">HARCAMA TALEBİ OLUŞTUR</h4>
            <form asp-action="CreateExpenditure" class="forms-sample" enctype="multipart/form-data">

                <div class="form-group" hidden>
                    <label asp-for="PersonnelId">Kullanıcı ID</label>
                    <input asp-for="PersonnelId" type="text" class="form-control" placeholder="Kullanıcı ID" />
                    <span asp-validation-for="PersonnelId" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="ExpenditureTypeId">Harcama Türü</label>
                    <select asp-for="ExpenditureTypeId" class="form-control custom-select">
                        <option value="" disabled selected>-- Harcama Türü Seçin --</option>
                        @foreach (var expenditureType in Model.ExpenditureTypes)
                        {
                            <option value="@expenditureType.Id">@expenditureType.Name</option>
                        }
                    </select>
                    <span asp-validation-for="ExpenditureTypes" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Amount">Miktarı</label>
                    <input asp-for="Amount" type="number" class="form-control" placeholder="Miktarı">
                    <span asp-validation-for="Amount" id="validationField" class="text-danger"></span>
                </div>

                @* <div class="form-group">
                <label asp-for="CurrencyTypeVM">Para Birimi</label>
                <select asp-for="CurrencyTypeVM" asp-items="Html.GetEnumSelectList<CurrencyTypeVM>()" class="form-control custom-select"></select>
                <span asp-validation-for="CurrencyTypeVM" class="text-danger"></span>
                </div> *@

                <div class="form-group">
                    <label asp-for="CurrencyType">Para Birimi</label>
                    <select asp-for="CurrencyType" class="form-control custom-select">
                        <option value="" disabled selected>-- Para Birimi Seçin --</option>
                        @foreach (var currency in Enum.GetValues(typeof(CurrencyTypeVM)))
                        {
                            <option value="@currency">@currency</option>
                        }
                    </select>
                    <span asp-validation-for="CurrencyType" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Document">Belge</label>
                    <input asp-for="Document" type="file" class="form-control" />
                    <span asp-validation-for="Document" class="text-danger"></span>
                </div>

                <input type="submit" value="Kaydet" class="btn btn-primary me-2" />
                <a asp-action="Index" class="btn btn-outline-primary">İptal</a>

            </form>
        </div>
    </div>
</div>

@section Scripts {

    <script>

        $(document).ready(function () {
            $("#Amount").blur(function () {
                $.ajax({
                    type: 'POST',
                    url: '/Personnel/Expenditure/ControlAmount',
                    data: { amountParam: $(this).val(), typeIdParam: $("#ExpenditureTypeId").val() },
                    success: function (result) {
                        $('#validationField').text(result);

                        // Kontrol mesajına göre formu gönderme veya göndermeme
                        var isValid = result.trim() === ""; // Hata mesajı yoksa geçerli kabul et
                        $("form").data("isValid", isValid); // form üzerinde geçerlilik durumunu sakla
                    },
                    error: function (error) {
                        console.error('Hata oluştu: ' + error.responseText);
                        $('#validationField').text(""); // Hata durumunda mesajı temizle
                    }
                });
            });

            // Form submit event'i
            $("form").submit(function (e) {
                // formun geçerli olup olmadığını kontrol et
                var isValid = $(this).data("isValid");
                if (!isValid) {
                    e.preventDefault(); // formu gönderme
                }
            });
        });

    </script>


}
@{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}