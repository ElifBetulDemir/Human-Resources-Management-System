
@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<PersonVM>

<style>
    .person-card {
        border: 1px solid #ddd;
        border-radius: 10px;
        padding: 20px;
        background-color: #fff;
        text-align: center;
        margin: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

        .person-card a {
            text-decoration: none;
        }

    .avatar {
        width: 80px;
        height: 80px;
        background-color: #BFD9D7;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #fff;
        font-size: 32px;
        margin: 0 auto;
    }

    .person-name {
        font-size: 20px;
        font-weight: bold;
        color: #333;
    }

    .person-title {
        font-size: 18px;
    }

    .person-tcno {
        font-size: 16px;
        color: #555;
    }

    h2 {
        text-align: center;
        color: #764640; 
        //font-weight: bold;
        margin-top: 20px;
        /* font-size: 28px; */
    }

    #nameFilter {
        margin-top: 20px;
    }

    .pagination {
        display: flex;
        list-style: none;
        padding: 0;

    }

    .pagination-container {
        display: flex;
        justify-content: center;
        margin-top: 100px; 
    }

    .pagination {
        display: flex;
        list-style: none;
        padding: 0;
    }

        .pagination li {
            margin-right: 5px;
        }

        .pagination a {
            text-decoration: none;
            color: #007bff;
            padding: 8px 12px;
            border: 1px solid #007bff;
            border-radius: 4px;
            background-color: #fff;
            transition: background-color 0.3s ease;
        }

            .pagination a:hover {
                background-color: #007bff;
                color: #fff;
            }

        .pagination .active a {
            background-color: #007bff;
            color: #fff;
        }

    .button-group {
        margin-top: auto;
    }
      .custom-modal-column {
    width: 100%;
    padding: 20px 20px; 
    text-align: left;
}

.custom-modal-column p {
    margin: 5px 20px;
}
    .btn-secondary {
        background-color: #cabfbc;
       
    }

        .btn-secondary:hover {
            background-color: #dcb9ac;
        }
</style>

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2 class="float-left">Personeller</h2>
        </div>
    </div>
    <div class="row mt-2">
        <div class="col-md-12">
            <input type="text" class="form-control" id="nameFilter" placeholder="Ad Giriniz" value="@ViewBag.Filter" />
        </div>
    </div>
    <div class="row mt-2 d-flex justify-content-center " id="personCardsContainer">
        @foreach (var item in Model)
        {
            <div class="col-md-3 ">
                <div class="person-card">

                    <div class="avatar">
                        <img src="~/photos/@item.Photo" alt="..."
                             class="rounded-circle img-fluid" style="width: 100px;">

                    </div
                    <br />
                    <br />
                    <div class="person-name">
                        <span>@item.Name.ToUpper() @(string.IsNullOrEmpty(item.SecondName) ? "" : item.SecondName.ToUpper()) @item.Surname.ToUpper()@(string.IsNullOrEmpty(item.SecondSurname) ? "" : item.SecondSurname.ToUpper())</span>
                    </div>
                    <div class="person-title">
                        <span>Pozisyon:</span>
                        <span>@item.Department.Name</span>
                    </div>
                    <div class="person-tcno">
                        <span>Meslek:</span>
                        <span>@item.Job.Name</span>
                    </div>
                    <br />
                    <div class="button-group">
                        <!-- Update Button -->
                        <a type="button" class="btn btn-secondary mt-2" asp-action="PersonnelUpdateByManager" asp-controller="Manager" asp-route-id="@item.Id">Güncelle</a>

                        <!-- Details Button -->
                        <button type="button" class="btn btn-secondary mt-2" data-bs-toggle="modal" data-bs-target="#exampleModal_@item.Id">Detay</button>
                    </div>

                    <div class="modal fade" id="exampleModal_@item.Id" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="exampleModalLabel">Personel Bilgileri</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"
                                            aria-label="Close"></button>
                                </div>
                                  <div class="modal-body custom-modal-body">
                                    <div class="row">
                                        <!-- Sol Sütun -->
                                        <div class="custom-modal-column">
                                           
                                                <p><strong>Ad:</strong> @item.Name</p>
                                                @if (!string.IsNullOrEmpty(item.SecondSurname))
                                                  {
                                                <p><strong>İkinci Ad:</strong> @(item.SecondName ?? "")</p>
                                                  }
                                                <p><strong>Soyad:</strong> @item.Surname</p>
                                               @if (!string.IsNullOrEmpty(item.SecondSurname))
                                                  {
                                                    <p><strong>İkinci Soyad:</strong> @item.SecondSurname</p>
                                                  }
                                                <p><strong>E-Posta:</strong> @item.EMail</p>
                                                <p><strong>Maaş:</strong> @item.Salary TL</p>

                                        
                                            
                                                <p><strong>Adres:</strong> @item.Address</p>
                                                <p><strong>Telefon Numarası:</strong> @item.PhoneNumber</p>
                                                <p><strong>İş:</strong> @item.Job.Name</p>
                                                <p><strong>Departman:</strong> @item.Department.Name</p>
                                                <p><strong>Cinsiyet:</strong> @Html.DisplayFor(modelItem => item.Gender)</p>
                                                <span asp-validation-for="@item.Gender" class="text-danger"></span>
                                           
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary"
                                            data-bs-dismiss="modal">
                                        Kapat
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>


                </div>
            </div>

        }

    </div>
</div>
@Html.PagedListPager((IPagedList)Model, page => Url.Action("PersonnelList",new {page}))

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            // Sayfa yüklendiğinde kartları sırala
            sortPersonCards();

            $("#nameFilter").on("input", function () {
                var filterValue = $(this).val().toLowerCase();
                $("#personCardsContainer .person-card").each(function () {
                    var personName = $(this).find(".person-name span").text().toLowerCase();
                    if (personName.includes(filterValue)) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });

                updatePager();
            });

            // Kartları sıralamak için kullanılan fonksiyon
            function sortPersonCards() {
                var container = $("#personCardsContainer");
                var cards = container.find(".person-card");

                // Kartları sırala
                cards.sort(function (a, b) {
                    var nameA = $(a).find(".person-name span").text().toLowerCase();
                    var nameB = $(b).find(".person-name span").text().toLowerCase();
                    return nameA.localeCompare(nameB);
                });

                container.html(cards);

                cards.addClass("col-md-3");
            }
            function updatePager() {
                var pageUrl = '@Url.Action("PersonnelList")' + '?page=' + '@Model.PageNumber';

                var filter = $("#nameFilter").val();
                if (filter) {
                    pageUrl += '&filter=' + filter;
                }
                if (window.location.href !== pageUrl) {
                    window.location.href = pageUrl;
                }
            }
        });
    </script>
}